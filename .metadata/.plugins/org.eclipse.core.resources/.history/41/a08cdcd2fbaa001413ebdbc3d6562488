package com.mase.week06;

import com.mase.week06.WithFinals.OverridingPrivate;
import com.mase.week06.WithFinals.OverridingPrivate2;

class WithFinals{
	private final void f(){//identical to private alone
		System.out.println("WithFinals::f ");
	}
	private void g(){//this is automatically final
		System.out.println("WithFinals::g ");
	}
	protected void h(){
		System.out.println("WithFinals::h ");
	}
	void i(){//this is package private
		System.out.println("WithFinals::i ");
	}

	class OverridingPrivate extends WithFinals{
		//@Override //cannot override as its already private
		private final void f(){
			System.out.println("OverridingPrivate::f ");
		}
		private final void g(){
			System.out.println("OverridingPrivate::g ");
		}
	}

	class OverridingPrivate2 extends WithFinals{
		//these are new methods (not overriding anything)
		//@Override //no such super method as its already private
		public final void f(){
			System.out.println("OverridingPrivate2::f ");
		}
		public final void g(){
			System.out.println("OverridingPrivate2::g ");
		}
		public final void h(){
			System.out.println("OverridingPrivate2::h ");
		}
		public final void k(){
			System.out.println("OverridingPrivate2::k ");
		}
	}
}
public class FinalMethods {

	public void main(String[] args) {
		OverridingPrivate2 op2 = new OverridingPrivate2();
		//op2.f();
		//op2.g();
		OverridingPrivate op = new OverridingPrivate();
		//op.f();// private access
		op.h();
	}

}


