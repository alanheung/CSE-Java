package com.mase.oop1.code2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

import com.practice.Student;

public class CodeAssessment2 {
	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {
		final int   STRINGS = 1, EXCEPTIONS = 2, INNER_CLASSES = 3, FILE_IO = 4, ENUMS=5, EXIT = 99;
		String userContinue = "y";

		System.out.println("Java features demo");
		while (userContinue.equalsIgnoreCase("y")) {
			switch (userChoice()) {
			case STRINGS:
				stringBuilder();
				break;
			case EXCEPTIONS:
//				method1();
				break;
			case INNER_CLASSES:
				innerClasses();
				break;
			case FILE_IO:
				fileIO();
				break;
			case ENUMS:
				enums();
				break;
			case EXIT:
				System.out.println("Exiting...");
				userContinue = "n";
				break;
			default:
				System.out.println("Unknown entry : ");
				break;
			}
		}
	}

	public static int userChoice() {
		System.out.println("What do you want to do ?\n1. String Builder\n2. Exceptions\n3. Inner Classes\n4. File I/O\n5. Enumerations\n99. Exit\nEnter choice: ");
		return sc.nextInt();
	}
	
	public static void stringBuilder(){
        StringBuilder sb = new StringBuilder();

        // the timetable (given)
        sb.append("Java Fundamentals Web Development2.1 Web Development4 SOA\n");
        sb.append("Web Development2.1 Java Fundamentals Web Development4 SOA\n");
        sb.append("Web Development4 Java Fundamentals Web Development2.1 SOA\n");
        sb.append("SOA Java Fundamentals Web Development4 Web Development2.1\n");
        sb.append("Web Development4 Web Development2.1 Java Fundamentals SOA\n");
	}
	public static void innerClasses(){
		
	}
	public static void fileIO(){
	      ArrayList<Car> cars = new ArrayList<>();
	        try {
	            BufferedReader in = new BufferedReader(new FileReader("cars.txt"));
	            String line = in.readLine();
	            while(line != null){
	                //System.out.println(line);
	                
	                // create a Student
	                String []columns = line.split("\t");
	                String reg = columns[0];
	                String make = columns[1];
	                String model = columns[2];
	                String tag = columns[3];
	                String price = columns[4];

	                
	                cars.add(new Car(reg, make, model, tag, Double.parseDouble(price)));
	                
	                line = in.readLine();
	            }
	            in.close();
	            
	            // output the array list
	            for(Car c:cars){
	                System.out.println(c);                
	            }
	        } catch (IOException ex) {
	            ex.printStackTrace();
	        }
		
		
	}
	public static void enums(){
		
	}
}


