package com.ait.moviestore;
import com.ait.DAO.MovieStoreDAO;
import com.ait.dvd.Dvd;
import com.ait.exception.*;

public class MovieStoreImpl implements MovieStore {
	//private final String manager;
	private MovieStoreDAO movieStoreDatabase;
	
	public MovieStoreImpl(MovieStoreDAO movieStoreDatabase){
		this.movieStoreDatabase=movieStoreDatabase;
	}

	@Override
	public Dvd rentMovie(String accountId, String movieTitle) throws DvdStoreException {
		Account account = movieStoreDatabase.findAccountForId(accountId);
		if (account != null && account.isAllowedToRentNewMovies()) {
			return rentMovieForValidAccount(movieTitle, account);
		} else {
			throw new DvdStoreUserException(accountId);
		}
	}

	private Dvd rentMovieForValidAccount(String movieTitle,
			final Account account) throws DvdStoreException {
		Dvd availableDvd= movieStoreDatabase.getAvailableDvdWithTitle(movieTitle);
		if (availableDvd != null) {
			createNewDvdRental(availableDvd, account);
			return availableDvd;
		} else {
			throw new DvdNotAvailable("DVD not available from this store: "+movieTitle);
		}
	}

	private void createNewDvdRental(Dvd dvd, Account account) {
		DvdRental rental = new DvdRental(account, dvd);
		dvd.rentToAccountHolder();
		account.addCharge(dvd.getChargePerDay());
		movieStoreDatabase.createNewDvdRental(rental);
	}
}
