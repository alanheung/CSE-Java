//Java uses call-by-value only
//However, if you are passing a reference (to an array or an object,)
//the effect is similar to call-by-reference i.e. the called method 
//can change the object/array in the calling method.
public class PassingArguments {

	public static void main(String[] args) {
		//pass in a variable of a primitive type
		//e.g. an int. Result no change.
		int a=10;
		System.out.println("Primitive before == "+a);
		primitiveExample(a);
		System.out.println("Primitive after == "+a);
		
		double d = 55.6;
		System.out.println("Primitive before == "+d);
		primitiveExample2(a);
		System.out.println("Primitive after == "+d);
		
	}//
	public static void primitiveExample(int x){
		//x is a copy of a from main
		x=50; 
	}
	public static void primitiveExample2(double x){
		//x is a copy of d from main
		x=50; 
	}
}//
