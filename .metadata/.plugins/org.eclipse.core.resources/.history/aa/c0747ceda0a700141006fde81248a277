package com.mase.shadowing;

class A{
	public int i=10;
	private int j=20;
	int m=1;
	
	public void x(){
		System.out.println("A::x()");
	}
	// static methods never overridden( they are hiding and will compile)
	// http://coderanch.com/how-to/java/OverridingVsHiding
	public static void sm(){
		System.out.println("A::sm()");
	}
}

class B extends A{
	private int i=30;
	public int k=40;
	int m=2;
	
	@Override
	public void x(){
		System.out.println("B::x()");
	}		//Override not available in NB
	public static void sm(){
		System.out.println("B::sm()");

	}
}

class C extends B{
	int m=3;
	
	@Override
	public void x(){
		System.out.println("C::x()");
	}	
	public static void sm(){
		System.out.println("C::sm()");

	}
}


public class TestClass {

	public static void main(String[] args) {
		C c = new C();
		System.out.println(c.j);//error - j has private access in B
		System.out.println(c.j);//error - j has private access in A
		System.out.println(c.k);//40


	}

}
