package com.mase.week06;

class Base{
	void f(){
		System.out.println("Base::f() ");
	}
	void h(){
		System.out.println("Base::h() ");
	}
}
class SubClass extends Base{
//	@Override
//	void f(){
//		System.out.println("SubClass::f() ");
//	}
	int f(){
		System.out.println("SubClass::f() with int return type");
	}
	//Overriding
	void f(int i){
		System.out.println("SubClass::f(int) "+i);
	}
//	void h(){
//		System.out.println("SubClass::h() ");
//	}
}
public class TestInheritance {
	public static void main(String[] args) {
		SubClass s = new SubClass();//Base s = new SubClass();//polymorphism
		s.f();
		s.f(1);//is there an f method that takes in an int - NO
	}
}//
